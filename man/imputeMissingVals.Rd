% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputeMissingValues.R
\name{imputeMissingVals}
\alias{imputeMissingVals}
\alias{imputeMissingVals.traces}
\alias{imputeMissingVals.tracesList}
\title{Impute NA values in a traces object}
\usage{
imputeMissingVals(traces, method = c("mean", "spline"))

\method{imputeMissingVals}{traces}(traces, method = c("mean", "spline"))

\method{imputeMissingVals}{tracesList}(tracesList, method = c("mean", "spline"))
}
\arguments{
\item{traces}{Object of class traces or tracesList.}

\item{method}{Character string, which interpolation method to use.}
}
\value{
Object of class traces with imputed NA values.
}
\description{
Imputes all NA values in a traces object by interpolation.
}
\details{
Unlike with standard imputation methods, missing values on the borders
are linearly extrapolated from the neighboring 2 values. Any imputed value below 0
is set to 0.
}
\section{Methods (by class)}{
\itemize{
\item \code{traces}: Impute missing values one traces object

\item \code{tracesList}: Find missing values in all traces within a tracesList
}}

\examples{
tracesMiss <- findMissingValues(examplePeptideTraces)
tracesImp <- imputeMissingVals(tracesMiss)
View(tracesImp$traces)

# The imputed values can be visualised using the package 'daff'
require(daff)
render_diff(diff_data(examplePeptideTraces$traces, tracesImp$traces))

}
