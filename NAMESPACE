# Generated by roxygen2: do not edit by hand

S3method(plot,traces)
S3method(subset,traces)
S3method(summary,traces)
export(annotateMolecularWeight)
export(annotateTraces)
export(appendSecondaryComplexFeatures)
export(calculateCoelutionScore)
export(calculatePathlength)
export(calculateQvalue)
export(calculateSibPepCorr)
export(calibrateMW)
export(callapseByUniqueFeatureGroups)
export(collapseHypothesis)
export(complexClustering)
export(estimateDecoyFDR)
export(estimateGridSearchDecoyFDR)
export(filterByMaxCorr)
export(filterBySibPepCorr)
export(filterByStepwiseCompleteness)
export(filterConsecutiveIdStretches)
export(filterFeatures)
export(filterGridSearchResults)
export(findComplexFeatures)
export(findMissingValues)
export(findProteinFeatures)
export(generateBinaryNetwork)
export(generateComplexDecoys)
export(generateComplexTargets)
export(generateDecoys)
export(generateRandomPepTraces)
export(getBestFeatures)
export(getBestParameterData)
export(getBestParameterStats)
export(getBestParameterStats_constraintFDR)
export(getBestQvalueParameters)
export(getDistanceMatrix)
export(getGenePepList)
export(getIntensityMatrix)
export(getUniqueFeatureGroups)
export(importFromOpenSWATH)
export(importPCPdata)
export(imputeMissingVals)
export(imputeTraces)
export(performComplexGridSearch)
export(performProteinGridSearch)
export(plotComplexCompletenessScatter)
export(plotFeatures)
export(plotIdFDRspace)
export(plotImputationSummary)
export(plotScoreDistribution)
export(plotSibPepCorrDensities)
export(plotSummarizedComplexes)
export(plotSummarizedMScoverage)
export(proteinQuantification)
export(qvaluePositivesPlot)
export(qvaluePositivesPlotGrid)
export(rocSibPepCorr)
export(runSECexplorer)
export(scoreFeatures)
export(summarizeFeatures)
export(toLongFormat)
import(data.table)
import(ggplot2)
import(grid)
import(gridExtra)
import(gtable)
importFrom(Rmpfr,mpfr)
importFrom(igraph,clusters)
importFrom(igraph,distances)
importFrom(igraph,graph.data.frame)
importFrom(igraph,graph_from_data_frame)
importFrom(qvalue,empPvals)
importFrom(qvalue,qvalue)
importFrom(scales,hue_pal)
